
This lesson walks through finishing up your secure AWS account configuration::

Adding an IAM user
Adding MFA to that IAM user
Creating an access key pair
Installing the CLI tools on Windows, Linux, and MacOS


Windows Tools Install
Visit: AWS Command Line Interface(https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html).
Download and run the 64-Bit installer, accepting all defaults.
Open the command prompt, and verify tools are installed using aws.
Run aws configure and enter the access key ID and secret access key you noted down earlier in the lesson, with us-east-1 as the region and json as the default output format.
Linux Install (Tested on CentOS)
sudo yum install epel-release
sudo yum install python-pip
sudo pip install awscli
Run aws configure and enter the access key ID and secret access key you noted down earlier in the lesson, with us-east-1 as the region and json as the default output format.

MacOS
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
brew install awscli
Run aws configure and enter the access key ID and secret access key you noted down earlier in the lesson, with us-east-1 as the region and json as the default output format.

Testing
aws s3 ls
Additional Updated Documentation: Installing the AWS CLI version 2 (2020)[https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html]


############################################################################################################

Welcome back and in this lesson, we're going to finish off the secure configuration of the personal AWS account that we set up at the start of this course. Now to be specific what we have so far is an AWS account with the account root user configured to use multifactor authentication and in addition to that, we set up a billing alarm so that if the usage of the account exceeds $10 in a given billing month then an alert will be generated and sent to an email address. Now we're going to extend that because it's not best practice to use this account root user for anything beyond the initial account set up. So we're going to configure an AWS service called IAM or identity and access management. We're going to create an IAM user. That's going to be the de facto admin of this account and once we've set that IAM user up, you're going to also attach multifactor authentication onto the account. We're going to generate a set of access keys for this user to use, and I'm going to demonstrate how to set up the AWS command line tools in each of the three main operating systems that you might be using. So that's Mac OS, Linux, and Windows. With that being said, let's get started and the first step is you'll need to log in as the account root user on the account. So you'll need to enter the email address of the AWS account, the password, and then the one time password that's generated by your MFA application. So go ahead and do that and log in to the AWS console as the account root user. Now the first thing I want to do is to make sure that any IAM users you create have billing access. So I'll click on the accounts menu dropdown and click on my account. Just scroll down, and the section we're looking for is IAM user and role access to billing information. Once you've located that section, go ahead and click on Edit and then click on Activate IAM Access, followed by update. This just makes sure that any IAM users have access to billing information, and that makes it easier in future. So then click on the AWS icon and return to the management console. Next, we're going to make it easy for IAM users to log in to our AWS account and we're going to do that by customizing the log in URL for our account for IAM users. To do that, we need to open the IAM service. So click on the services dropdown and type IAM and then click to open the IAM console. Once it opens at the top, on that page, you'll see the specific URL to sign on to this account for IAM users and you'll see that it's got the account number at the start. We're going to customize that. To customize it, look on the right and you'll see a link called Customize. If you click that link, it'll allow you to specify an account alias, and that's what we're going to do. We're going to create a friendly account alias to identify this account, so I'm going to enter the name of the account. You can put whatever alias you want in there and hit Yes Create, and that just makes it nice and easy to log on to this account for IAM users because now we can utilize this sign in link and bookmark it and give it to anyone else who needs to access this account without them needing to remember the account number. Next we'll be creating an IAM user that will function as our initial account administrator so I mentioned before it's not best practice to use the root user for anything beyond the initial account set up. So I'm going to create an IAM user that's going to function as my account administrator. To do that, look on the menu on the left and select Users. From this screen, click on Add User, and enter a username that you want for your initial user. So I'll enter my username in this box and then because I'll be initially using this for console access, I'll tick the box for management console access. Tick the box for custom password. Untick the box that requires me to reset this at next log in and I'll enter my strong password. This is a password that's been automatically generated by a password manager. I'll click on Next Permissions. IAM users always start off with zero permissions, and so we need to assign a policy to this IAM user. I'm going to go ahead and click on, Attach Existing Policies directly to use a managed policy and we'll see a list of all of the available policies. We can use this filter box to filter down by keywords. I'm going to be using the administrator access policy and this gives full access to all AWS services, so I'll check the box next to administrator access and then I'll move on by clicking Next Tags. I'll skip past this, click on next review, and at this point IAM will finish up the creation. I can click on close and then I'm back at the user's console with my new administrator IAM user created. The next step is to test this user, so I'm going to log into this account using this IAM user. To do that, I'll go back to the dashboard and just copy this IAM user's sign in link into my clipboard. Once I've got that, go to the accounts dropdown, and sign out. Once that process is completed, I'll use this sign in link so I'll paste it into the address bar and open it. Now the screen that appears will look slightly different because it's an IAM log in screen. So in addition to the username and password, there's also this account ID or alias. Now that's correct. So I'll go ahead and enter the IAM username that I just created as well as the strong password that I set using my password manager. Once I put both of those in I'll click on sign in. Now this is logging me in with an IAM user, and we can confirm that by clicking the account dropdown and we'll see the IAM user and account listed in this menu. At that point, we're good to go. We've verified that this IAM user works, so let's go back to the IAM console to complete the next step. Now the next step is to assign an MFA device to our IAM user because it's best practice. So select the user, select the security credentials tab, and there you can see a signed MFA device click on the manage link next to that, and that will bring up a similar looking dialogue. Click on Continue and then you'll need to show that QR code to your MFA application so go ahead and do that your MFA application will scan it and begin generating codes. Just like with the account root user, you'll need to enter two consecutive codes so enter the first one that's on your MFA application now and then once it cycles round and generates another enter that in to MFA code two and click on assign MFA. That'll take a couple of seconds. You can go ahead and click on close to close off this dialogue. We'll, of course, want to test it again. So just make sure that you've got a copy of the console sign in link to your clipboard. What you got that you can use the account drop down menu and sign out. You'll be able to log back in and you can do that, either by clicking the log back in button or pasting that URL into your browser. After verifying the account ID or Alias, go ahead and enter in your IAM user and password and then click on sign in but because you set up MFA, you'll also be prompted for your MFA code or one time password. You'll need to get that from your MFA application. Type it in and then click on submit so you can already see that you need an additional piece of information to log into this AWS account. So not only do you need your username, you need the password and you need the one time generated code. The next step in our set up process is to generate a pair of access keys that we'll be using with the command line. So open the IAM console we'll be generating access keys for our IAM user. So select the IAM user, select the Security Credentials tab, scroll down and click on the Create Access Key Button. Now, this will generate two parts of the access key: the access key ID, which is the public and relatively low security part of this key. So you'll want to note this down because we'll be using it in the following sections of this video as well as the access key ID we'll also generate the secret access key. Now, the secret access key is the high security component of the set of access keys. It's the part that's only generated once. So once you do show it you'll need to make sure that you've got a copy of it in your clipboard, make sure that you include the first and last characters and then just note it down somewhere safe because we'll be using it to configure the command line utilities on whatever operating system we're using. Now it is worth pointing out that this secret access key is incredibly sensitive. You need to make sure that you don't keep this permanently anywhere. You use it to configure the command line utilities, and then you discard it. When you create a pair of access keys, it will be the only time that you get to see the secret access key component but ideally, you're making one set of access keys for one specific purpose, so you need to be extremely careful with where you store them. Okay, so the last part of this video, I just want to step through how to install the AWS CLI tools on each of the three most popular operating systems. So that's Windows, Linux, and Mac OS. I'll make sure that I do include links in the lesson description to where you can download the CLI installation application from. If you go to this web page, there are downloads for Windows, and instructions for Mac and Linux. So in this case, I'm going to be installing Windows first so I'll download the 64 bit application. I'll need to run it. It'll finish downloading, perform a security scan, and then begin the installation. At this point, you can pretty much answer all the defaults, so just click next, next again, install, accept the security prompt, and just let the installation finish. Once it has finished, you can open up a command prompt and type AWS just to verify that the installs worked successfully and if you see this output, so just the command usage instructions, then you're good to go now to configure the command line tools. Use AWS configure and it's going to ask you for four pieces of information. The first piece is the access key ID which is the public part of the access key that you noted down earlier. Make sure you got that any clipboard and then just paste it into the command prompt. The second part is the more sensitive part, which is the secret access key. So make sure you've got that and paste that in. At this point, you'll be asked to enter the default region name so that's U.S. East 1. That's the region that we'll be using throughout this course. So go ahead and enter that press Enter and follow that up with your default output format. Now I would suggest JSON here, because I will be using JSON extensively through the course, and it's often the easiest format to open up in a code editor and understand. So I put JSON and press enter. Now the easiest way to test the tools is to do AWS S3 ls and what you should see in a brand new created account is an empty listing. If you see any error then that indicates a problem. If everything's good, you should see no output with the brand new account or potentially one or two S3 buckets if it's an existing account. Installing the command line tools under Linux uses the Pip application, so you need to make sure that you've got Pip installed. Now in this case I'm going to demonstrate this with CentOS 7. So I'll need to install Pip and to do that, I need to add the EPEL repository which I'll do first I'll need to enter my password and allow that install to complete then I'll use YUM to install Python Pip and I'll need to give it sudo permissions. I'll let that install complete as well. Once Pip is installed, I can use it to install the AWS CLI tools. Now it is possible that you might get a permissions denied error as with this case, and if you do, you just need to give it sudo permissions to allow the install to complete successfully. It'll take a couple of seconds, and if we run AWS again, we should see the output showing the command line usage and that indicates that the tools have been installed successfully. Once I've done that, I'll use an AWS configure and I'll enter those same details and again, so I'll need the access key ID which is the public and less sensitive version and I'll need the secret access key, which is the private component. I'll enter the default region name of U.S. East 1 and then JSON again for the output format and to verify, I'll run AWS S3 ls and if I get zero output, we know that it's been successful and then the last operating system I want to configure is Mac OS. Now to install in Mac OS, I'm going to utilize a system called Homebrew. Homebrew is a command line package manager for Mac OS. So I'm going to first install Homebrew by using this command. So I'll copy that into my clipboard and paste it into the terminal and complete this installation. This might take a couple of minutes to complete because it does have a number of prerequisites that it needs to install, including the command line tools for X code. So I'll allow that to complete and then once it's complete, we can use the brew install AWS CLI command, and that will handle the end to end installation for us. So again, take a couple of minutes to complete, and it will install any of the prerequisites for the CLI tools. I could run AWS again to check that it's installed and it is I'll clear the screen, run AWS configure, and for the third and final time, I'll enter the access key ID, the secret access key, the default region, and the default output format and then again to verify I'll run an aws s3 ls and if I receive no output then I've configured the tools successfully and that's the end of this lesson, we've completed a lot. We've successfully secured our AWS account by creating an IAM user. With this IAM user, we've associated it with a multifactor authentication code. Once we've done that, we've generated access keys and then we've used those access keys to install and set up the command line tools on Windows, Linux, and Mac OS. Now, you'll obviously only be doing this for a single operating system whichever one you're most comfortable with but I wanted to make sure that you have a step by step process on how to get up and running so from this point onward, you can either use the console or CLI tools. So thanks for watching. Go ahead, mark this video as complete and I'll see you in the next.