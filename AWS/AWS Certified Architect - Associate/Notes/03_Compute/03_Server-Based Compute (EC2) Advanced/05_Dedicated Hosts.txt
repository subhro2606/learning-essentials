Welcome back and in this really brief lesson I want to talk about dedicated hosts and dedicated hosts are a service that's available within EC2. 
So to launch dedicated hosts just go into the instance a section of the menu on the left, select Dedicated Hosts, allocate a host, and then pick a type. 

Dedicated host come with an associated hourly charge. 
So instead of paying for individual EC2 instances, you're paying for a specific EC2 dedicated host and you can pay those either on demand or using reserved purchase types. 
With dedicated hosts you specify an availability zone, which the dedicated hosts go into. 
It's not a regional service. 
This is physical hardware that's going inside an availability zone. 
You need to pick a specific type of EC2 instance host. 
Each different type of EC2 host the AWS use is designed for a particular type and size of instance. 
So, for example, if I want to launch a specific size of M5 utilizing one type of EC2 host, which is an M5 type. Now that EC2 host can either run for 48 M5.larges or six M54.extralarges or somewhere in between. 
So when you allocate a dedicated host, you need to pick not only the instance type but also the instance size and those two things together will govern how many instances you can run on that host. 

This is a physical service, you're actually allocating a physical EC2 host that you can use to deploy instances onto. 
Now this is beneficial because it allows you to manage your own capacity and control instance placement on specific hosts. 
If you got multiple EC2 dedicated hosts, you can specify which hosts your instances are placed on. 
You can also enable auto placement then you can obviously specify no preference and allow instances to be placed on the most appropriate host. 
If you disable auto placement, then you need to specify which host to use for every instance launch. 
You've also got the ability to use host recovery, which means if a dedicated host fails for some reason then your instances can automatically restart on a new host assuming that you've got one. 



You need to specify a type of instance that you be launching on this host and given that type, it'll control how many instances could go on each host. For example if we, specify M5.large that's 48, if we specify M5.4.xlarge that six. 


Now you might be asking under what situations you would use a dedicated host and their three main business requirements that would mandate you to use a dedicated host. 
The first is compliance and regulatory reasons. 
So by using dedicated host, you're ensuring that your instances are running on hardware that's dedicated for your use. 
So there are some governance and security benefits to choosing a dedicated host. 
The second reason is that for certain enterprise licensing models, they're fairly straight about the number of CPUs and the number of cores and a given hosts that their software runs on. 
So if you're running your software on your own dedicated host, you know exactly how many CPUs and cores that host has, and you're able to more appropriately manage licensing. 
This is further improved by the fact that you can control instance placement, which means for any instances running on these host that's running this type of license restricted software you can often achieve cost efficiencies by managing the placement of this software running on these instances. 
So the type of scenarios that you'd use dedicated hosts in are fairly specific to licensing, to governance, and to really strict instance placement requirements. 
Anything else I tend to not use them because there are restrictions. 
There are a lot of things that you can't do if you're utilizing dedicated hosts, and I'll be talking about those as we go through the course and covered the individual products but at this point, we've covered everything that I wanted to in the lesson and we finished off the EC2 advanced topic of the course. 
So when you're ready, you'll be starting the serverless compute topic of the course, where we'll be looking at serverless architecture as well as the products and features that support that architecture. 
So go ahead, mark this lesson as complete, and when you're ready, join me in the next section.