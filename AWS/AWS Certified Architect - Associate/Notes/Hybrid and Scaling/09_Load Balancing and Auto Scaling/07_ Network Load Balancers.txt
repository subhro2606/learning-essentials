Welcome back and in this lesson, I want to briefly touch upon the theory of network load balancers.
Now, this is a topic that I don't expect to feature heavily in the Solutions Architect Associate exam.



Network Load Balancer:
So in the grand scheme of things, network load balancers are a relatively new product inside AWS and at this level, an awareness that they exist is enough to get you through any exam questions that might mention them.
Now, I mentioned in previous lessons how historically we started off with classic load balancers. Now, over time we moved away from classicload balancers, and AWS now recommends for most use cases that you make use of an application load balancer because it supports all of the original functionality of a classic load balancer in addition to supporting layer seven protocols so, HTTP and HTTPS.
Now, the exception to this rule is when you need to load balance any protocols which are not HTTP or HTTPS and if you need those packets to remain untouched, so you need to support a protocol that isn't web or secure web, it needs to be highly performant and you need to put those packets through to the destination without any modification then that's where you'd use network load balancers.

So network load balancers operate at layer four of the OSI seven layer model because they don't touch any data inside packets above layer four.
Then, in theory, you can support any protocols that you want as long as they live on top of TCP or UDP. So it doesn't really matter what upper level protocol your application uses as long as it utilizes TCP or UDP then you're good to use a network load balancer. Now, using a network load balancer isn't a case of making compromises because there are significant advantages to using this product versus application load balancers.

Advantages & Uniqueness:
So it's not just about whether you're using HTTP or HTTPS. It's also about the fact that because a network load balancer doesn't need to worry about any of the upper layer protocols, it's much faster. So a network load balancer is capable of some unique functionality versus the application load balancer.
The first is that it's able to handle really high end workloads so highly volatile workloads, and it can scale to millions of requests per second.
With a network load balancer, you can actually allocate static IP addresses, which means that it's easier to integrate with any security or firewall products.
**It supports registering targets outside of a VPC.
Now, again, this is fairly advanced functionality, but I do want you to be aware that it does exist. It supports routing requests to multiple applications on a single EC2 instance, so you can register each instance or IP address with the same target group using multiple ports. So that's a fairly useful piece of functionality if you do need to utilize it and it still supports the use of containerized applications so utilizing ECS.
So essentially what AWS have done, and I mentioned this in previous lesson is they've taken the functionality of the classic load balancer. They've enhanced it so they added this concept of targets and target groups, and then they've kind of split that functionality off. So they've provided the application load balancer if you absolutely need really high end layer seven protocol support, and for everything else, they've provided the network load balancer.

Uses:
So if you need to use protocols that aren't HTTP or HTTPS. So anything else that runs on top of TCP or UDP but isn't web or secure web then you can utilize the network load balancer, and that's really all you need to understand for the exam.
So for any protocols that are on web or secure web, then you can probably look to use a network load balancer and that's all I wanted to cover.
That really is the limit of the technical information that you need for the exam.
So at this point you can go ahead and mark this lesson as complete, and when you're ready, we'll move on to the next set of lessons where we're going to look at launch configurations, launch templates, on auto scaling groups, which are how we can automatically scale EC2 instances inside AWS.
